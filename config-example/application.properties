spring.profiles.active = development

logging.config = classpath:config/log4j2.xml

#server.port = 8443
#server.address = 0.0.0.0
#server.servlet.context-path = /

#server.compression.enabled = true
#server.compression.mime-types = text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json,application/xml
#server.compression.min-response-size = 8192

security.white-list=true

# Export server certificate/pair to PKCS12 bundle:
# openssl pkcs12  -export -in server.crt -inkey server.key -out server.p12 -name server
#server.ssl.enabled = true
#server.ssl.key-alias = server
#server.ssl.key-password = secret
#server.ssl.key-store = file:config/keystore.p12
#server.ssl.key-store-password = secret
#server.ssl.key-store-type = pkcs12
#server.ssl.protocol = TLS
#server.ssl.trust-store = config/keystore.p12 
#server.ssl.trust-store-password = secret
#server.ssl.trust-store-type = pkcs12

#
# JPA
#

spring.datasource.hikari.connectionTimeout = 30000
spring.datasource.hikari.idleTimeout = 600000
spring.datasource.hikari.maxLifetime = 1800000
spring.datasource.hikari.maximumPoolSize = 15

spring.jpa.properties.hibernate.format_sql = true
spring.jpa.hibernate.use-new-id-generator-mappings = true
spring.jpa.open-in-view = false
spring.jpa.show-sql = false
spring.jpa.generate-ddl = false
spring.jpa.hibernate.ddl-auto = validate

#
# HttpFS-Proxy
#

gr.helix.httpfsproxy.async.task-timeout-seconds = 300

gr.helix.httpfsproxy.hdfs.min-block-size = 1048576
gr.helix.httpfsproxy.hdfs.min-replication = 2
gr.helix.httpfsproxy.hdfs.max-replication = 8

gr.helix.httpfsproxy.ping-backend = true
gr.helix.httpfsproxy.httpfs.base-uris[0] = http://httpfs-c1-n1.hadoop.internal:14000/
gr.helix.httpfsproxy.httpfs.default-user = ubuntu

gr.helix.httpfsproxy.admin.remote-addresses = 127.0.0.1/8, 10.9.8.0/24
gr.helix.httpfsproxy.admin.admin-password = adm1n
